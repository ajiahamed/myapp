import React, { useEffect, useState } from "react";

const App = () => {
  const [styleLoaded, setStyleLoaded] = useState(false);

  useEffect(() => {
    // Trigger fade-in animation on mount
    setStyleLoaded(true);
  }, []);

  const envVars = Object.keys(process.env)
    .filter((key) => key.startsWith("REACT_APP_"))
    .map((key) => ({ key, value: process.env[key] }));

  const bodyStyle = {
    margin: 0,
    padding: 0,
    fontFamily: "sans-serif",
    display: "flex",
    justifyContent: "center",
    alignItems: "center",
    minHeight: "100vh",
    background: "linear-gradient(135deg, #6dd5ed, #2193b0)",
    color: "#ffffff",
    overflow: "hidden",
    textAlign: "center",
    WebkitFontSmoothing: "antialiased",
    MozOsxFontSmoothing: "grayscale",
  };

  const containerBaseStyle = {
    backgroundColor: "rgba(0, 0, 0, 0.25)",
    padding: "50px 70px",
    borderRadius: "15px",
    boxShadow: "0 10px 30px rgba(0, 0, 0, 0.3)",
    backdropFilter: "blur(8px)",
    WebkitBackdropFilter: "blur(8px)",
    maxWidth: "600px",
    width: "90%",
    opacity: 0,
    transform: "translateY(20px)",
    transition: "all 0.6s ease-out",
  };

  const containerAnimatedStyle = {
    ...containerBaseStyle,
    opacity: 1,
    transform: "translateY(0)",
  };

  return (
    <div style={bodyStyle}>
      <div style={styleLoaded ? containerAnimatedStyle : containerBaseStyle}>
        <h1>.env Variables</h1>
        {envVars.length > 0 ? (
          <ul style={{ listStyleType: "none", padding: 0 }}>
            {envVars.map(({ key, value }) => (
              <li key={key} style={{ marginBottom: "10px" }}>
                <strong>{key}:</strong> {value}
              </li>
            ))}
          </ul>
        ) : (
          <p>No REACT_APP_* variables found.</p>
        )}
      </div>
    </div>
  );
};

export default App;
